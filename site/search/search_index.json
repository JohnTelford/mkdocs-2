{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Iterative Development Version Version: 0.1.1 Abstract Creating and maintaining websites that meet users needs are, complex, difficult, and time consuming. Introduction This website created by johntelford.com LLC , is about optimizing website project life time costs using Iterative Development, and using static site generator for developing websites. Development teams working on website features, fixes, or testing can deploy private Preview Internet websites with their changes, without disturbing other developers work or the website production version, enabling stakeholders to monitor progress and quickly give feedback, speeding up the development process. This website is being created and maintained by the technologies described. Danger The slightest errors or security issues during website development will require Defect Remediation Costs sometime during the life time of the website. The highest cost over the life time of website projects is remediating defects.","title":"Home"},{"location":"#iterative-development","text":"Version Version: 0.1.1 Abstract Creating and maintaining websites that meet users needs are, complex, difficult, and time consuming.","title":"Iterative Development"},{"location":"#introduction","text":"This website created by johntelford.com LLC , is about optimizing website project life time costs using Iterative Development, and using static site generator for developing websites. Development teams working on website features, fixes, or testing can deploy private Preview Internet websites with their changes, without disturbing other developers work or the website production version, enabling stakeholders to monitor progress and quickly give feedback, speeding up the development process. This website is being created and maintained by the technologies described. Danger The slightest errors or security issues during website development will require Defect Remediation Costs sometime during the life time of the website. The highest cost over the life time of website projects is remediating defects.","title":"Introduction"},{"location":"company/","text":"Company Note I am the sole proprietor of JohnTelford.com LLC technology consulting company, working with client development projects for more that 30 years. Collaboration A seasoned, knowledgeable, industry professional, Electronics, Software, and Web Engineer specializing in web hardware and software technology disciplines, Architecture, Architecture, and Deployment. Practitioner with extensive experience across most IT functional groups Ability to effectively collaborate to accomplish multidiscipline goals: Senior management teams External and internal clients Functional groups Individual contributors Vendors Nuggets Way back when the Internet web browsers and programming languages came along, I became interested in web technologies, and began learn by doing technology deep dives. I have years of learning ever changing Electronics, Internet, and Software technologies by hands-on experiencing the technologies du jour. I have a passion pursuing what\u2019s new and improved with these industries. Checking out what\u2019s new or not, a pipe dream or not, or what\u2019s new and improved, is like panning for gold. Buried within the mountains of info rubble produced daily, every so often one finds interesting technology nuggets making the effort worthwhile. I use the (http://techtalkjohn.com/hypecurve) as a guide.","title":"About"},{"location":"company/#company","text":"Note I am the sole proprietor of JohnTelford.com LLC technology consulting company, working with client development projects for more that 30 years.","title":"Company"},{"location":"company/#collaboration","text":"A seasoned, knowledgeable, industry professional, Electronics, Software, and Web Engineer specializing in web hardware and software technology disciplines, Architecture, Architecture, and Deployment. Practitioner with extensive experience across most IT functional groups Ability to effectively collaborate to accomplish multidiscipline goals: Senior management teams External and internal clients Functional groups Individual contributors Vendors","title":"Collaboration"},{"location":"company/#nuggets","text":"Way back when the Internet web browsers and programming languages came along, I became interested in web technologies, and began learn by doing technology deep dives. I have years of learning ever changing Electronics, Internet, and Software technologies by hands-on experiencing the technologies du jour. I have a passion pursuing what\u2019s new and improved with these industries. Checking out what\u2019s new or not, a pipe dream or not, or what\u2019s new and improved, is like panning for gold. Buried within the mountains of info rubble produced daily, every so often one finds interesting technology nuggets making the effort worthwhile. I use the (http://techtalkjohn.com/hypecurve) as a guide.","title":"Nuggets"},{"location":"contact/","text":"Note A labyrinth symbolizes possible difficulties reaching website project goals. My knowledge and experience with website technology disciplines may be helpful. John Telford Portland, Oregon JohnTelford.com LLC phone : text : 503-312-7248 Email","title":"Contact"},{"location":"creating%20site/","text":"Creating a Site Note This site is built using Material for MkDocs It's just Markdown Focus on the content of your documentation and create a professional static site in minutes. No need to know HTML, CSS or JavaScript \u2013 let Material for MkDocs do the heavy lifting for you. Works on all devices Serve your documentation with confidence \u2013 Material for MkDocs automatically adapts to perfectly fit the available screen estate, no matter the type or size of the viewing device. Desktop. Tablet. Mobile. All great. pip install mkdocs-material This will automatically install compatible versions of all dependencies: MkDocs, Markdown, Pygments and Python Markdown Extensions. Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately. mkdocs build mkdocs serve","title":"Creating a Site"},{"location":"creating%20site/#creating-a-site","text":"Note This site is built using Material for MkDocs It's just Markdown Focus on the content of your documentation and create a professional static site in minutes. No need to know HTML, CSS or JavaScript \u2013 let Material for MkDocs do the heavy lifting for you. Works on all devices Serve your documentation with confidence \u2013 Material for MkDocs automatically adapts to perfectly fit the available screen estate, no matter the type or size of the viewing device. Desktop. Tablet. Mobile. All great. pip install mkdocs-material This will automatically install compatible versions of all dependencies: MkDocs, Markdown, Pygments and Python Markdown Extensions. Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately. mkdocs build mkdocs serve","title":"Creating a Site"},{"location":"defect_costs/","text":"The highest cost over the life time of website projects is remediating defects. Content and software defects cost less when found early, as this chart shows: The early defect detection mechanisms built into iterative development and a static site generator are: VScode editor tool extensions continually check for syntax and other errors Fast refresh live-editing quickly showing changes and any runtime errors while typing Team members deploy their copy of the project repository with their changes, to private websites where stakeholders can see them and give feedback. See Preview Deployments","title":"Defect Remediation Costs"},{"location":"define/","text":"Define Defining websites helps the Iterative Development teams and stakeholders understand the project. Defining website prerequisites is the first steps in optimizing website costs. Danger The slightest errors or security issues during website development will require Defect Remediation Costs sometime during the life time of the website. The highest cost over the life time of website projects is remediating defects. Prerequisites The Define team prerequisites are: - Defining what the project is about - Funding - Purpose - Functionality - Stakeholders - Content - The musts and wants features - The security requirements Purpose Knowing the purpose of the website project helps separate goals into musts and wants Project Funding Project funding is a primary factor in the success of website projects. It enables teams to have skilled people, equipment, and tools. Website Type Is the website: Brochureware ? Websites or web pages produced by directly adapting a company's printed marketing or advertising material. Commerce ? Something else ? Stakeholders Who are the stakeholders? The teams deploy private Preview websites for stakeholders review while creating new, updating, fixing, or exploring new features. Musts and Wants Functionality When stakeholders agree the website Musts functionalities are operational, then it is a Minimum Viable Product . When stakeholders agree the website Wants functionalities are operational, the website is production quality and ready to be deployed to the Internet. Website material What is the website message ? What existing and new website material will be in website pages? Security What are the website security needs?","title":"Team - Define"},{"location":"define/#prerequisites","text":"The Define team prerequisites are: - Defining what the project is about - Funding - Purpose - Functionality - Stakeholders - Content - The musts and wants features - The security requirements","title":"Prerequisites"},{"location":"define/#purpose","text":"Knowing the purpose of the website project helps separate goals into musts and wants","title":"Purpose"},{"location":"define/#project-funding","text":"Project funding is a primary factor in the success of website projects. It enables teams to have skilled people, equipment, and tools.","title":"Project Funding"},{"location":"define/#website-type","text":"Is the website: Brochureware ? Websites or web pages produced by directly adapting a company's printed marketing or advertising material. Commerce ? Something else ?","title":"Website Type"},{"location":"define/#stakeholders","text":"Who are the stakeholders? The teams deploy private Preview websites for stakeholders review while creating new, updating, fixing, or exploring new features.","title":"Stakeholders"},{"location":"define/#musts-and-wants-functionality","text":"When stakeholders agree the website Musts functionalities are operational, then it is a Minimum Viable Product . When stakeholders agree the website Wants functionalities are operational, the website is production quality and ready to be deployed to the Internet.","title":"Musts and Wants Functionality"},{"location":"define/#website-material","text":"What is the website message ? What existing and new website material will be in website pages?","title":"Website material"},{"location":"define/#security","text":"What are the website security needs?","title":"Security"},{"location":"design/","text":"Design Website Design is creating website look and feel. Useful websites require the user experience and functionality be consistence and complement the content. Danger The slightest errors or security issues during website development will require Defect Remediation Costs sometime during the life time of the website. The highest cost over the life time of website projects is remediating defects. Overview The core foundations of a user's website experience are: Fast - Website responds quickly to user interactions with smooth scrolling. Integrated - The website uses the full capabilities of the user device to create an experience true to the device. Reliable - Loads quickly and reliably even in uncertain network conditions. Engaging - Keeps user coming back to a website that is designed to look and feel natural. Prerequisites Website design prerequisites are making decisions: Website Design Consistency Theme Color Scheme Typology Navigation User interaction Material for MkDocs Together, MkDocs and Material for MkDocs are among the most popular options when it comes to choosing a static site generator and theme This website is built using Material for MkDocs There are several other Development Frameworks website static site generators are available for website development. Checkout the Material for MkDocs Philosophy . Material for MkDocs is a theme for MkDocs . See Create a Site . Follow the instructions to quickly creating a demo Material fo MkDocs website. Responsive Website Design The majority of users access websites using mobile devices. They and others have little tolerance for slow loading website pages or pages that do not conform to their screen size. Website design: Ensures pages load quickly Website pages are display correctly on a variety of devices and window or screen size The website look and feel, users experience, and functionality are consistently maintain. Consistency Website consistency is the look and feel of the site. The users experience, and functionality does not vary between website pages. Theme The website theme is: Color scheme Header Pages Fonts Footer Typology Navigation User interaction","title":"Team - Design"},{"location":"design/#overview","text":"The core foundations of a user's website experience are: Fast - Website responds quickly to user interactions with smooth scrolling. Integrated - The website uses the full capabilities of the user device to create an experience true to the device. Reliable - Loads quickly and reliably even in uncertain network conditions. Engaging - Keeps user coming back to a website that is designed to look and feel natural.","title":"Overview"},{"location":"design/#prerequisites","text":"Website design prerequisites are making decisions: Website Design Consistency Theme Color Scheme Typology Navigation User interaction","title":"Prerequisites"},{"location":"design/#material-for-mkdocs","text":"Together, MkDocs and Material for MkDocs are among the most popular options when it comes to choosing a static site generator and theme This website is built using Material for MkDocs There are several other Development Frameworks website static site generators are available for website development. Checkout the Material for MkDocs Philosophy . Material for MkDocs is a theme for MkDocs . See Create a Site . Follow the instructions to quickly creating a demo Material fo MkDocs website.","title":"Material for MkDocs"},{"location":"design/#responsive-website-design","text":"The majority of users access websites using mobile devices. They and others have little tolerance for slow loading website pages or pages that do not conform to their screen size. Website design: Ensures pages load quickly Website pages are display correctly on a variety of devices and window or screen size The website look and feel, users experience, and functionality are consistently maintain. Consistency Website consistency is the look and feel of the site. The users experience, and functionality does not vary between website pages.","title":"Responsive Website Design"},{"location":"design/#theme","text":"The website theme is: Color scheme Header Pages Fonts Footer Typology Navigation User interaction","title":"Theme"},{"location":"develop/","text":"Abstract The Develop team translates the Define and Design teams processes into website pages using development languages creating website material such as text and graphics, and for configuring and using website development tools. Development languages are strict, nonhuman, and abstract logical structures. Danger The slightest errors or security issues during development will require Defect Remediation Costs sometime during the life time of the website. The highest cost over the life time of website projects is remediating defects. Prerequisites Decisions about resources required to transform the Define and Design work into a website and infrastructure. Decisions about using a static site generator and programming tools. Static Site Generators The Troika of HTML , CSS , and JavaScript website programming languages have become standard for creating website pages. Web browser interprets the standard Troika languages and renders the website. The job of a static site generators is compile the website pages written in Troika and non troika programming languages such as Markdown, into a single file containing a combination of standard Troika languages web for browsers to interpret. Web browsers loads the website single file from the deployment server, interprets and renders website pages. Reference What is a static site generator? Docusaurus Docusaurus is a static site generator used to create and maintain websites. It builds a single-page application with fast client-side navigation, leveraging the full power of React to make websites","title":"Develop"},{"location":"develop/#prerequisites","text":"Decisions about resources required to transform the Define and Design work into a website and infrastructure. Decisions about using a static site generator and programming tools.","title":"Prerequisites"},{"location":"develop/#static-site-generators","text":"The Troika of HTML , CSS , and JavaScript website programming languages have become standard for creating website pages. Web browser interprets the standard Troika languages and renders the website. The job of a static site generators is compile the website pages written in Troika and non troika programming languages such as Markdown, into a single file containing a combination of standard Troika languages web for browsers to interpret. Web browsers loads the website single file from the deployment server, interprets and renders website pages. Reference What is a static site generator?","title":"Static Site Generators"},{"location":"develop/#docusaurus","text":"Docusaurus is a static site generator used to create and maintain websites. It builds a single-page application with fast client-side navigation, leveraging the full power of React to make websites","title":"Docusaurus"},{"location":"developmenttools/","text":"VScode Info Visual Studio Code (VScode) is a Microsoft product. It has become the goto editor for many. It is free, built on open source, and runs everywhere. VScode is the command and control center for the website development stack. The development command and control tasks are: Editing Markdown and MDX text and Troika web programming materials Use git and GitHub to manage project files. Git is built-in and optimized to work with Microsoft GitHub Editor tool extensions continually check for syntax and other errors Live edit browser previews show how edits will look when deployed Deploy secure website previews to the Internet for stakeholders Deploy production website to the Internet Built-in command shell And much more Extensions Useful extensions are: Dark+ Material. The default Dark+ theme, using Material's color palette ESlint. Integrates ESLint JavaScript into VS Code GitHub Repositories. Remotely browse and edit any GitHub repository Lorem Text Generator Lorem text generator extension for VScode Markdown All in One All you need for Markdown (keyboard shortcuts, table of contents, auto preview and more) Rainbow Brackets Provide rainbow colors for the round brackets, the square brackets and the squiggly brackets Todo Tree This extension quickly searches the local repository workspace for comment tags like TODO and FIXME, and displays them in a tree view in the activity bar VScode -icons Icons for Visual Studio Code Git Client VScode built-in git commands : Review diffs, Stage files Make commits Push pull and more Git Desktop Info Git Desktop is an alternative to using VScode built-in Git commands. It abstract Github and more Git commands. It interacts with GitHub using a GUI instead of the command line or a web browser. It is a Microsoft product available on Mac and Windows. Visual Studio Code is recommended for most people. Git and GitHub References Info These Git and Github references contain concepts and commands: Version Control System VScode built-in gitg commands Git version-control tools in Visual Studio Code Git and GitHub Introduction Git GitHub GitHub Desktop GitHub Info The core technologies of Iterative Development are, Git and GitHub. The central project repository is controlled by the project gatekeeper, and a content delivery network, like Cloudflare , where Internet production websites and individual team private Preview Internet websites, are deployed. GitHub is a Distributed Version Control Systems enabling multiple teams to work separately on the same project without having an impact on the work of others. GitHub manages an online web hosted central project repository containing all project files. It is a unified source of truth. It helps teams collaborate and maintain the entire history of project file changes. Question GitHub helps answer the questions for the lifetime of the project who changed what, where, when, and why? Team members use the Website Development Stack to develop and deploy websites to the Internet. The GitHub Workflow GitHub workflow is centered on Pull Request The GitHub workflow works with collaborating team members contributing to the central project repository using the Forks. It is centered on the topic Branches workflow. A summary of GitHub workflow for each team member is: Fork the central project repository creating a local project repository in individual team members GitHub account Clone the forked local project repository in team member GitHub account to workstation Creates a topic Branch off the cloned local project repository main branch Make topic edits and commits Push after each commit to the cloned local project repository in GitHub account Periodically Pull from the central project repository. The develop branch will have merged accepted Pull Requests Periodically deploy local project repository to a private Preview website without disturbing other developers work or the production version, for stake holders viewing and feedback. This reduces the Pull Request evaluation time because stake holders interested in topics can see how they are progressing and working with the website. Open a Pull Request on the GitHub local project repository to begin the process of integrating the local project repository with the central project repository Team members discuss, and optionally continue committing on Pull Requests. The project gatekeeper merges or closes Pull Requests to the central project repository, and deploys the central project repository to a private Preview website for stack holders viewing. The teams and gatekeeper continues the GitHub workflow process until stack holders agree the central project repository is ready for release to the public internet Teams may Pull the central project repository at anytime to view and test other topic branches. Git Git Tutorial Fork Git GitHub Fork A fork is a copy of the project repository in a team member's GitHub account. Forks let team members make changes to a project without affecting the original repository or other team members. Team members can fetch updates from the project repository with a pull command Forks are used to either propose changes to someone else's project to which you do not have write access, or to use someone else's project as a starting point for your own idea. You can fork a repository to create a copy of the repository and make changes without affecting the upstream repository Forking a repository is similar to copying a repository, with two major differences: You can use a pull request to suggest changes from your user-owned fork to the original repository in its GitHub instance, also known as the upstream repository. You can bring changes from the upstream repository to your local fork by synchronizing your fork with the upstream repository. Fork a Repo Clone Git Clone from GitHub A clone is a full copy of a repository, including all logging and versions of files, copied from the team member GitHub account to team member workstation. Commits keep the team member local project repository up to date on the workstation and on GitHub. If the workstation copy is damaged, the latest commit can be cloned from GitHubto the workstation. Branch Git Branch Creating a branch is to safely diverge from a line of development and continuing on another. An example is creating a branch create a feature or to test a radical idea Branching enables working on different parts of a project without impacting other branches. Work on a branch can be merged with other project branches. Switching between branches and work on different projects without them interfering with each other. Branching in Git is lightweight and fast! Checkout Switch Switches to a new branch A quick way of switching branch on Git is to use the git switch command and specify the name of the branch you want to switch. If the destination branch does not exist, you have to specify the \u201c-c\u201d option (for \u201ccreate branch\u201c), otherwise you will get an error message when switching to that branch. $ git switch $ git switch -c Again, as an example, let\u2019s say that you want to switch to the \u201cfeature\u201d branch from the \u201cmaster\u201d branch. In order to switch from the \u201cmaster\u201d branch to the \u201cfeature\u201d branch, use the \u201cgit switch\u201d command and specify the destination branch (which is \u201cfeature\u201d in this case) $ git switch feature switch branch using git switch On the other hand, if you try to switch to a non existing branch, you will get the following error message $ git switch non-existing-branch fatal: invalid reference: non-existing-branch To solve this error, make sure to append the \u201c-c\u201d option to the \u201cgit switch\u201d command to specify that you want to switch to a new branch. $ git switch -c non-existing-branch Switched to a new branch 'non-existing-branch' Congratulations, you have now successfully switched to another branch and you can start working on it. iA Writer Editing Markdown / MDX website pages and blog posts using iA Writer is faster because of focus and grammar features with live preview. iA Writer is a Markdown Writing app: Faster way to write MD website material Extensive Style Check Focus Sentence Paragraph Available for Mac, iOS, Windows, and Android The Mac iA Writer stores files in iCloud. They are available for editing using supported devices when there is an internet connection. Chronosync When one or more pages have been edited using iA Writer , the ChronoSync Mac app is used to synchronize files between iA Writer and the local repository. Since the iA Writer files are store in iCloud, they are available for editing using supported devices when there is an internet connection. If edits have been made to files the local repository, use ChronoSync to synchronize them to iA Writer.","title":"Develpopment Tools"},{"location":"developmenttools/#vscode","text":"Info Visual Studio Code (VScode) is a Microsoft product. It has become the goto editor for many. It is free, built on open source, and runs everywhere. VScode is the command and control center for the website development stack. The development command and control tasks are: Editing Markdown and MDX text and Troika web programming materials Use git and GitHub to manage project files. Git is built-in and optimized to work with Microsoft GitHub Editor tool extensions continually check for syntax and other errors Live edit browser previews show how edits will look when deployed Deploy secure website previews to the Internet for stakeholders Deploy production website to the Internet Built-in command shell And much more","title":"VScode"},{"location":"developmenttools/#extensions","text":"Useful extensions are: Dark+ Material. The default Dark+ theme, using Material's color palette ESlint. Integrates ESLint JavaScript into VS Code GitHub Repositories. Remotely browse and edit any GitHub repository Lorem Text Generator Lorem text generator extension for VScode Markdown All in One All you need for Markdown (keyboard shortcuts, table of contents, auto preview and more) Rainbow Brackets Provide rainbow colors for the round brackets, the square brackets and the squiggly brackets Todo Tree This extension quickly searches the local repository workspace for comment tags like TODO and FIXME, and displays them in a tree view in the activity bar VScode -icons Icons for Visual Studio Code","title":"Extensions"},{"location":"developmenttools/#git-client","text":"VScode built-in git commands : Review diffs, Stage files Make commits Push pull and more","title":"Git Client"},{"location":"developmenttools/#git-desktop","text":"Info Git Desktop is an alternative to using VScode built-in Git commands. It abstract Github and more Git commands. It interacts with GitHub using a GUI instead of the command line or a web browser. It is a Microsoft product available on Mac and Windows. Visual Studio Code is recommended for most people.","title":"Git Desktop"},{"location":"developmenttools/#git-and-github-references","text":"Info These Git and Github references contain concepts and commands: Version Control System VScode built-in gitg commands Git version-control tools in Visual Studio Code Git and GitHub Introduction Git GitHub GitHub Desktop","title":"Git and GitHub References"},{"location":"developmenttools/#github","text":"Info The core technologies of Iterative Development are, Git and GitHub. The central project repository is controlled by the project gatekeeper, and a content delivery network, like Cloudflare , where Internet production websites and individual team private Preview Internet websites, are deployed. GitHub is a Distributed Version Control Systems enabling multiple teams to work separately on the same project without having an impact on the work of others. GitHub manages an online web hosted central project repository containing all project files. It is a unified source of truth. It helps teams collaborate and maintain the entire history of project file changes. Question GitHub helps answer the questions for the lifetime of the project who changed what, where, when, and why? Team members use the Website Development Stack to develop and deploy websites to the Internet.","title":"GitHub"},{"location":"developmenttools/#the-github-workflow","text":"GitHub workflow is centered on Pull Request The GitHub workflow works with collaborating team members contributing to the central project repository using the Forks. It is centered on the topic Branches workflow. A summary of GitHub workflow for each team member is: Fork the central project repository creating a local project repository in individual team members GitHub account Clone the forked local project repository in team member GitHub account to workstation Creates a topic Branch off the cloned local project repository main branch Make topic edits and commits Push after each commit to the cloned local project repository in GitHub account Periodically Pull from the central project repository. The develop branch will have merged accepted Pull Requests Periodically deploy local project repository to a private Preview website without disturbing other developers work or the production version, for stake holders viewing and feedback. This reduces the Pull Request evaluation time because stake holders interested in topics can see how they are progressing and working with the website. Open a Pull Request on the GitHub local project repository to begin the process of integrating the local project repository with the central project repository Team members discuss, and optionally continue committing on Pull Requests. The project gatekeeper merges or closes Pull Requests to the central project repository, and deploys the central project repository to a private Preview website for stack holders viewing. The teams and gatekeeper continues the GitHub workflow process until stack holders agree the central project repository is ready for release to the public internet Teams may Pull the central project repository at anytime to view and test other topic branches.","title":"The GitHub Workflow"},{"location":"developmenttools/#git","text":"Git Tutorial","title":"Git"},{"location":"developmenttools/#fork","text":"Git GitHub Fork A fork is a copy of the project repository in a team member's GitHub account. Forks let team members make changes to a project without affecting the original repository or other team members. Team members can fetch updates from the project repository with a pull command Forks are used to either propose changes to someone else's project to which you do not have write access, or to use someone else's project as a starting point for your own idea. You can fork a repository to create a copy of the repository and make changes without affecting the upstream repository Forking a repository is similar to copying a repository, with two major differences: You can use a pull request to suggest changes from your user-owned fork to the original repository in its GitHub instance, also known as the upstream repository. You can bring changes from the upstream repository to your local fork by synchronizing your fork with the upstream repository. Fork a Repo","title":"Fork"},{"location":"developmenttools/#clone","text":"Git Clone from GitHub A clone is a full copy of a repository, including all logging and versions of files, copied from the team member GitHub account to team member workstation. Commits keep the team member local project repository up to date on the workstation and on GitHub. If the workstation copy is damaged, the latest commit can be cloned from GitHubto the workstation.","title":"Clone"},{"location":"developmenttools/#branch","text":"Git Branch Creating a branch is to safely diverge from a line of development and continuing on another. An example is creating a branch create a feature or to test a radical idea Branching enables working on different parts of a project without impacting other branches. Work on a branch can be merged with other project branches. Switching between branches and work on different projects without them interfering with each other. Branching in Git is lightweight and fast!","title":"Branch"},{"location":"developmenttools/#checkout","text":"","title":"Checkout"},{"location":"developmenttools/#switch","text":"Switches to a new branch A quick way of switching branch on Git is to use the git switch command and specify the name of the branch you want to switch. If the destination branch does not exist, you have to specify the \u201c-c\u201d option (for \u201ccreate branch\u201c), otherwise you will get an error message when switching to that branch. $ git switch $ git switch -c Again, as an example, let\u2019s say that you want to switch to the \u201cfeature\u201d branch from the \u201cmaster\u201d branch. In order to switch from the \u201cmaster\u201d branch to the \u201cfeature\u201d branch, use the \u201cgit switch\u201d command and specify the destination branch (which is \u201cfeature\u201d in this case) $ git switch feature switch branch using git switch On the other hand, if you try to switch to a non existing branch, you will get the following error message $ git switch non-existing-branch fatal: invalid reference: non-existing-branch To solve this error, make sure to append the \u201c-c\u201d option to the \u201cgit switch\u201d command to specify that you want to switch to a new branch. $ git switch -c non-existing-branch Switched to a new branch 'non-existing-branch' Congratulations, you have now successfully switched to another branch and you can start working on it.","title":"Switch"},{"location":"developmenttools/#ia-writer","text":"Editing Markdown / MDX website pages and blog posts using iA Writer is faster because of focus and grammar features with live preview. iA Writer is a Markdown Writing app: Faster way to write MD website material Extensive Style Check Focus Sentence Paragraph Available for Mac, iOS, Windows, and Android The Mac iA Writer stores files in iCloud. They are available for editing using supported devices when there is an internet connection.","title":"iA Writer"},{"location":"developmenttools/#chronosync","text":"When one or more pages have been edited using iA Writer , the ChronoSync Mac app is used to synchronize files between iA Writer and the local repository. Since the iA Writer files are store in iCloud, they are available for editing using supported devices when there is an internet connection. If edits have been made to files the local repository, use ChronoSync to synchronize them to iA Writer.","title":"Chronosync"},{"location":"diagrams/","text":"Diagrams Sequence sequenceDiagram Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! Graph graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; State stateDiagram-v2 state fork_state <<fork>> [*] --> fork_state fork_state --> State2 fork_state --> State3 state join_state <<join>> State2 --> join_state State3 --> join_state join_state --> State4 State4 --> [*] Class classDiagram Person <|-- Student Person <|-- Professor Person : +String name Person : +String phoneNumber Person : +String emailAddress Person: +purchaseParkingPass() Address \"1\" <-- \"0..1\" Person:lives at class Student{ +int studentNumber +int averageMark +isEligibleToEnrol() +getSeminarsTaken() } class Professor{ +int salary } class Address{ +String street +String city +String state +int postalCode +String country -validate() +outputAsLabel() } Entity-relationship erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses","title":"Diagrams"},{"location":"diagrams/#diagrams","text":"","title":"Diagrams"},{"location":"diagrams/#sequence","text":"sequenceDiagram Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good!","title":"Sequence"},{"location":"diagrams/#graph","text":"graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!];","title":"Graph"},{"location":"diagrams/#state","text":"stateDiagram-v2 state fork_state <<fork>> [*] --> fork_state fork_state --> State2 fork_state --> State3 state join_state <<join>> State2 --> join_state State3 --> join_state join_state --> State4 State4 --> [*]","title":"State"},{"location":"diagrams/#class","text":"classDiagram Person <|-- Student Person <|-- Professor Person : +String name Person : +String phoneNumber Person : +String emailAddress Person: +purchaseParkingPass() Address \"1\" <-- \"0..1\" Person:lives at class Student{ +int studentNumber +int averageMark +isEligibleToEnrol() +getSeminarsTaken() } class Professor{ +int salary } class Address{ +String street +String city +String state +int postalCode +String country -validate() +outputAsLabel() }","title":"Class"},{"location":"diagrams/#entity-relationship","text":"erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses","title":"Entity-relationship"},{"location":"material/","text":"This website is an example of using these application to create and maintain website Markdown text and Troika web programming materials. iA Writer is a mirror of website Markdown text and Troika web programming materials in the local repository. iA Writer is where text material is changed or new text material is created, and kept synchronized with the local repository using ChronoSync. Using iA Writer for editing website material and using Chronosync to synchronizing with the Local Repository seems faster with less errors. iA Writer \"iA Writer offers a unique writing experience that lets you concentrate and clarify your message. Used by half a million people worldwide, its powerful interface is crafted to cut out noise, let you focus on what you want to say, and help you structure and trim your text.\" iA Writer is used to edit website material and blog posts. Using iA Writer is faster website material than using VScode because of markdown features, focus, grammar features, and live preview. iA Writer is a Markdown Writing app: Faster way to write MDX website material Extensive Style Check Focus Sentence Paragraph Available for Mac, iOS, Windows, and Android When one or more pages have been edited using iA Writer, the ChronoSync app is used to synchronize files from iA Writer to VScode or visa versa. Since the iA Writer files are store in iCloud, they can be edited remotely using laptops, smart phones, or pads. Sometimes in the heat of development or defect remediation, changes are made to files in the local repository. Chronosync is used to be synchronized the Local Repository with iA Writer . Chronosync \" ChronoSync is a comprehensive toolkit for performing file synchronization \" ChronoSync is used to keep iA Write and the local repository in sync.","title":"Website Material"},{"location":"material/#ia-writer","text":"\"iA Writer offers a unique writing experience that lets you concentrate and clarify your message. Used by half a million people worldwide, its powerful interface is crafted to cut out noise, let you focus on what you want to say, and help you structure and trim your text.\" iA Writer is used to edit website material and blog posts. Using iA Writer is faster website material than using VScode because of markdown features, focus, grammar features, and live preview. iA Writer is a Markdown Writing app: Faster way to write MDX website material Extensive Style Check Focus Sentence Paragraph Available for Mac, iOS, Windows, and Android When one or more pages have been edited using iA Writer, the ChronoSync app is used to synchronize files from iA Writer to VScode or visa versa. Since the iA Writer files are store in iCloud, they can be edited remotely using laptops, smart phones, or pads. Sometimes in the heat of development or defect remediation, changes are made to files in the local repository. Chronosync is used to be synchronized the Local Repository with iA Writer .","title":"iA Writer"},{"location":"material/#chronosync","text":"\" ChronoSync is a comprehensive toolkit for performing file synchronization \" ChronoSync is used to keep iA Write and the local repository in sync.","title":"Chronosync"},{"location":"programming/","text":"Languages React embraces the fact that rendering logic is inherently coupled with other UI logic: how events are handled, how the state changes over time, and how the data is prepared for display. Instead of artificially separating technologies by putting markup and logic in separate files, React separates concerns with cohesive components that contain both. Markdown Markdown is a faster way of creating and maintaining website material. It is a HTLM abstraction that is compiled to web standard HTML John Gruber published the original Markdown Syntax Guide. Different flavors of Markdown have evolved since then. \"Markdown is a better way to write HTML. It is compiled into HTML at deploy time. Markdown is a lightweight plaintext markup language used to add formatting elements to documents. Markdown is now one of the world\u2019s popular markup languages. Using Markdown is different from using a WYSIWYG editor. In an application like Microsoft Word, you click buttons to format words and phrases, and the changes are visible immediately. Markdown is not like that. In a Markdown-formatted file. Markdown syntax is added to the text to indicate which words and phrases look different.\" Markdown has been characterized by an informal specification and a reference implementation for conversion to HTML. Over time, many Markdown implementations have appeared. They are driven by the need for additional features like tables, footnotes, definition lists, and HTML inside Markdown blocks. The behavior of additional features diverge from the reference implementation and informal specification, and have attracted attention. Not all flavors of Markdown are compatible or supported by all frameworks. I'm hesitant creating website material without using a version of Markdown. Other Languages Abstract Other languages are frequently needed to create and deploy websites Some are: Editor commands VScode Version Control System git commands GitHub commands Static Static Site Generator commands Deploy commands","title":"Programming"},{"location":"programming/#languages","text":"React embraces the fact that rendering logic is inherently coupled with other UI logic: how events are handled, how the state changes over time, and how the data is prepared for display. Instead of artificially separating technologies by putting markup and logic in separate files, React separates concerns with cohesive components that contain both.","title":"Languages"},{"location":"programming/#markdown","text":"Markdown is a faster way of creating and maintaining website material. It is a HTLM abstraction that is compiled to web standard HTML John Gruber published the original Markdown Syntax Guide. Different flavors of Markdown have evolved since then. \"Markdown is a better way to write HTML. It is compiled into HTML at deploy time. Markdown is a lightweight plaintext markup language used to add formatting elements to documents. Markdown is now one of the world\u2019s popular markup languages. Using Markdown is different from using a WYSIWYG editor. In an application like Microsoft Word, you click buttons to format words and phrases, and the changes are visible immediately. Markdown is not like that. In a Markdown-formatted file. Markdown syntax is added to the text to indicate which words and phrases look different.\" Markdown has been characterized by an informal specification and a reference implementation for conversion to HTML. Over time, many Markdown implementations have appeared. They are driven by the need for additional features like tables, footnotes, definition lists, and HTML inside Markdown blocks. The behavior of additional features diverge from the reference implementation and informal specification, and have attracted attention. Not all flavors of Markdown are compatible or supported by all frameworks. I'm hesitant creating website material without using a version of Markdown.","title":"Markdown"},{"location":"programming/#other-languages","text":"Abstract Other languages are frequently needed to create and deploy websites Some are:","title":"Other Languages"},{"location":"programming/#editor-commands","text":"VScode","title":"Editor commands"},{"location":"programming/#version-control-system","text":"git commands GitHub commands","title":"Version Control System"},{"location":"programming/#static-static-site-generator-commands","text":"","title":"Static Static Site Generator commands"},{"location":"programming/#deploy-commands","text":"","title":"Deploy commands"},{"location":"siteoverview/","text":"Abstract This website discusses optimizing website project life time costs. It describes using a static site generator for developing websites. It is based on Iterative Development and Web Component Technologies . The basic idea of Iterative Development is to develop websites through repeated cycles (iterative) and in smaller portions at a time (incremental), enabling iterative development teams to take advantage of what was learned during development of earlier features or versions of the system. Iterative web development teams working together help optimizing website costs and lowering the difficulties creating websites. This is done by developers working on website features, fixes, or testing, and deploying Private Internet websites with their changes, without disturbing other developers work or the website production version. This enables the stakeholders to monitor progress and quickly give feedback, speeding up the development process. Steps Teams Prerequisites Define Design Develop Maintain The core of Iterative Development is the GitHub project central repository controlled by a team member gatekeeper. GitHub is a Distributed Version Control Systems enabling multiple team members to work separately and deploy their work to a private Internet websites for review, without having an impact on the work of others. GitHub manages a central online web hosted project repository containing all project files. It is a unified source of truth. It helps teams collaborate and maintain the entire history of project file changes and team members comments. During the lifetime of the project, it helps answer the questions who changed what, where, when, and why? Deploy working iterations of a software development solutions involving stakeholders at all phases of the development process Each team member make changes to their local copy of the project repository, they deploy a private Preview Internet website for stakeholders to view and give feedback. Producing website functional iterations, it can tested, examined, and adjusted on an ongoing basis. The repository guardian and other team members evaluate and approve team members change requests to the central repository. Added change requests are deployed to a private preview Internet website for stakeholders to preview and give feedback. This process continues until stakeholders agree the website is ready for a public deployment. This process is more efficient than creating a website and hoping it meets the needs of stakeholders, and finding out the website needs to be redesign from the ground up because one or more critical requirements were overlooked. Difficulties Creating and maintaining websites that meet users needs are difficult, complex, and time consuming. When website development defects are mitigated early in development, life time website costs are lower. Slow The Google PageSpeed Insights website reports on the performance of websites for both mobile and desktop devices, and provides suggestions on how pages may be improved. Google reports mobile website pages load within 22 seconds on average. However, 53 percent of mobile users will leave a page that takes longer than 3 seconds to load. Content People visit websites for content. They have little interest in how the content is created or how it gets to their screen. Everyone wants websites pages to load quickly and conforming to their screen size. The website look and feel, users experience, functionality, needs to be consistent and complement the content. Iterative Development Teams Website development teams working together deliver their work to other teams during the website life time. The slightest errors or security issues will require Defect Remediation Costs sometime during the life time of the website. Iterative website development Teams Iterative website development enables the Define, Design, Develop, Deploy and Maintain team members to be operational at the same time creating, testing, and remediating defects. Minimum Viable Product The first goal of website development projects is a Minimum Viable Product . It is a way to understand whether the website project idea will work or not. It is a stage in website development where the must features are implemented and ready to test with end-users. It gives feedback about the positive aspects and shortcomings. The next steps are adding the want features, until stakeholders agree the website is production quality and ready to be deployment.","title":"Overview"},{"location":"siteoverview/#steps","text":"Teams Prerequisites Define Design Develop Maintain The core of Iterative Development is the GitHub project central repository controlled by a team member gatekeeper. GitHub is a Distributed Version Control Systems enabling multiple team members to work separately and deploy their work to a private Internet websites for review, without having an impact on the work of others. GitHub manages a central online web hosted project repository containing all project files. It is a unified source of truth. It helps teams collaborate and maintain the entire history of project file changes and team members comments. During the lifetime of the project, it helps answer the questions who changed what, where, when, and why? Deploy working iterations of a software development solutions involving stakeholders at all phases of the development process Each team member make changes to their local copy of the project repository, they deploy a private Preview Internet website for stakeholders to view and give feedback. Producing website functional iterations, it can tested, examined, and adjusted on an ongoing basis. The repository guardian and other team members evaluate and approve team members change requests to the central repository. Added change requests are deployed to a private preview Internet website for stakeholders to preview and give feedback. This process continues until stakeholders agree the website is ready for a public deployment. This process is more efficient than creating a website and hoping it meets the needs of stakeholders, and finding out the website needs to be redesign from the ground up because one or more critical requirements were overlooked.","title":"Steps"},{"location":"siteoverview/#difficulties","text":"Creating and maintaining websites that meet users needs are difficult, complex, and time consuming. When website development defects are mitigated early in development, life time website costs are lower.","title":"Difficulties"},{"location":"siteoverview/#slow","text":"The Google PageSpeed Insights website reports on the performance of websites for both mobile and desktop devices, and provides suggestions on how pages may be improved. Google reports mobile website pages load within 22 seconds on average. However, 53 percent of mobile users will leave a page that takes longer than 3 seconds to load.","title":"Slow"},{"location":"siteoverview/#content","text":"People visit websites for content. They have little interest in how the content is created or how it gets to their screen. Everyone wants websites pages to load quickly and conforming to their screen size. The website look and feel, users experience, functionality, needs to be consistent and complement the content.","title":"Content"},{"location":"siteoverview/#iterative-development-teams","text":"Website development teams working together deliver their work to other teams during the website life time. The slightest errors or security issues will require Defect Remediation Costs sometime during the life time of the website. Iterative website development Teams Iterative website development enables the Define, Design, Develop, Deploy and Maintain team members to be operational at the same time creating, testing, and remediating defects.","title":"Iterative Development Teams"},{"location":"siteoverview/#minimum-viable-product","text":"The first goal of website development projects is a Minimum Viable Product . It is a way to understand whether the website project idea will work or not. It is a stage in website development where the must features are implemented and ready to test with end-users. It gives feedback about the positive aspects and shortcomings. The next steps are adding the want features, until stakeholders agree the website is production quality and ready to be deployment.","title":"Minimum Viable Product"},{"location":"teams/","text":"Iterative Development Teams Abstract Iterative Development Team members work together delivering their work to other teams during the life time of the website. Danger The slightest errors or security issues during website development will require Defect Remediation Costs sometime during the life time of the website. The highest cost over the life time of website projects is remediating defects. Development Teams graph TD dev --- def dev --- des dev --- dep dev --- mnt def --- des dep --- mnt dev([Development]) def([Define]) des([Design]) dep([Deploy]) mnt([Maintenance]) Note Iterative website development enables the Define, Design, Develop, Deploy and Maintain teams to be operational at the same time creating, testing and remediating website defects. Teams Prerequisites Define The Define team prerequisites are: - Defining what the project is about - Funding - Purpose - Functionality - Stakeholders - Content - The musts and wants features - The security requirements Design The Design team prerequisites are: - Decisions about Website Design - Consistency - Theme - Color Scheme - Typology - Navigation - User interaction. Develop The Develop team prerequisites are: - Decisions about resources required to transform the Define and Design work into a website and infrastructure. - Decisions about using a static site generator and programming tools. Deploy The Deploy team prerequisites are: - Decisions about resources required for deploying production version of the website to the Internet. - Decisions about resources required for team developers working on features, fixes, or testing to deploy private Preview Internet websites with their changes, without disturbing other developers work or the production version. See Preview Deployments Maintain The Maintain team prerequisites are: - Decisions about remediating deployed websites Define , Design , Develop , Deploy , or Security defects. - Organizing members from other teams to be part of the Maintain team while remediating specific defects.","title":"Teams Overview"},{"location":"teams/#iterative-development-teams","text":"Abstract Iterative Development Team members work together delivering their work to other teams during the life time of the website. Danger The slightest errors or security issues during website development will require Defect Remediation Costs sometime during the life time of the website. The highest cost over the life time of website projects is remediating defects.","title":"Iterative Development Teams"},{"location":"teams/#development-teams","text":"graph TD dev --- def dev --- des dev --- dep dev --- mnt def --- des dep --- mnt dev([Development]) def([Define]) des([Design]) dep([Deploy]) mnt([Maintenance]) Note Iterative website development enables the Define, Design, Develop, Deploy and Maintain teams to be operational at the same time creating, testing and remediating website defects.","title":"Development Teams"},{"location":"teams/#teams-prerequisites","text":"","title":"Teams Prerequisites"},{"location":"teams/#define","text":"The Define team prerequisites are: - Defining what the project is about - Funding - Purpose - Functionality - Stakeholders - Content - The musts and wants features - The security requirements","title":"Define"},{"location":"teams/#design","text":"The Design team prerequisites are: - Decisions about Website Design - Consistency - Theme - Color Scheme - Typology - Navigation - User interaction.","title":"Design"},{"location":"teams/#develop","text":"The Develop team prerequisites are: - Decisions about resources required to transform the Define and Design work into a website and infrastructure. - Decisions about using a static site generator and programming tools.","title":"Develop"},{"location":"teams/#deploy","text":"The Deploy team prerequisites are: - Decisions about resources required for deploying production version of the website to the Internet. - Decisions about resources required for team developers working on features, fixes, or testing to deploy private Preview Internet websites with their changes, without disturbing other developers work or the production version. See Preview Deployments","title":"Deploy"},{"location":"teams/#maintain","text":"The Maintain team prerequisites are: - Decisions about remediating deployed websites Define , Design , Develop , Deploy , or Security defects. - Organizing members from other teams to be part of the Maintain team while remediating specific defects.","title":"Maintain"},{"location":"website-development-stack/","text":"Abstract The Iterative Website Development Stack illustrates how websites are developed and deployed to the Internet. It is web browser agnostic. What works for big screens, works for small screens. -- flowchart TB crepo --- cdn cdn --- net dev --- vsc github --- crepo github --- cdn github --- net vsc --- lrepo net --- prevweb net --- proweb vsc --- net vsc --- mkd dev([Developers]) cdn([CDN - Deploy Website to Web]) crepo([Central Repository]) github([GitHub]) lrepo([Local Repository]) mkd([Mkdocs Material - Static Site Generator]) net([Internet]) prevweb([Preview - Web Sites]) proweb([Production - Web Site]) vsc([VScode - Command and Control]) Website Development Stack Overview The key Iterative Development technologies are VScode for command and control, MkDocs Marteral static site generator, GitHub , git , and a Content Delivery Network (CDN) like Cloudflare Developers: Local Repository : Each developer has their own \"Local Repository\" that is derived from the GitHub \"Central Repository\". It can be updated with the approved changes in the \"Remote Repository.\" VScode Developers us VSCode as their Web Development Stack Command and Control center, and project editor MkDocs Material Is \"Static Site Generator\" that uses the \"Local Repository\" code to create a local website that may deployed as a \"Preview GitHub The core technologies of Iterative Development are Git, GitHub central project repository controlled by the project gatekeeper, and a content delivery network, like Cloudflare, deploying private Preview Internet websites, production websites, and individual team members private Preview websites. GitHub is a Distributed Version Control Systems enabling multiple teams to work separately on the same project without having an impact on the work of others. GitHub manages an online web hosted central project repository containing all project files. It is a unified source of truth. It helps teams collaborate and maintain the entire history of project file changes. The \"Central Repository\" is managed my a team member It helps answer the questions for the lifetime of the project who changed what, where, when, and why? Website\" for stake holders. The same \"MkDocs Static Site Generator\" tools are used to create the \"Production Website\" by the \"CDN - Deploy Website to Web\" GitHub Central Repository. The core technologies of Iterative Development are Git, GitHub central project repository controlled by the project gatekeeper, and a content delivery network, like Cloudflare, deploying private Preview Internet websites, production websites, and individual team members private Preview websites. GitHub is a Distributed Version Control Systems enabling multiple teams to work separately on the same project without having an impact on the work of others. GitHub manages an online web hosted central project repository containing all project files. It is a unified source of truth. It helps teams collaborate and maintain the entire history of project file changes. The \"Central Repository\" is managed my a team member It helps answer the questions for the lifetime of the project who changed what, where, when, and why? Team members use the Website Development Stack to develop and deploy websites to the Internet. There would be confusion and possible defects created if Team members were to directly make changes to the central project repository. A solution to this problem is to have one central repository controlled by a team member gatekeeper. Each team member forks a copy of central project repository to their GetHub account and makes a clone of it on their workstation. Each developer makes changes to their repository clone . They cannot directly make changes to the central repository. Team members commit changes to their local repository clone They may deploy their local repository to a private Preview Internet website for stakeholders to see and give feedback. The process is managed using GitHub for Teams . When stakeholders determine developers changes, defect fixes, or new features are ready, a GitHub Pull Request is made by developers to the central project repository. Project team members and the gatekeeper are notified by GitHub of the Pull Request request. They may examine, comment on, suggest possible changes, and test the code. When the team agrees on committed developers changes, they are committed to the central project repository by the gatekeeper. This process is repeated for all developer committed changes. Iterations of the central project repository may be deployed by the gatekeeper to a private Preview for stakeholders viewing. The next step is each developer Pulls the central repository changes and commits them to their local repository copy of the central project. This process keeps team members up to date on changes. The central project repository may be deployed to the public Internet by the gatekeeper after stakeholders agree there have been sufficient development and testing iterations.","title":"Website Development Stack"},{"location":"website-development-stack/#website-development-stack","text":"Overview The key Iterative Development technologies are VScode for command and control, MkDocs Marteral static site generator, GitHub , git , and a Content Delivery Network (CDN) like Cloudflare Developers: Local Repository : Each developer has their own \"Local Repository\" that is derived from the GitHub \"Central Repository\". It can be updated with the approved changes in the \"Remote Repository.\" VScode Developers us VSCode as their Web Development Stack Command and Control center, and project editor MkDocs Material Is \"Static Site Generator\" that uses the \"Local Repository\" code to create a local website that may deployed as a \"Preview GitHub The core technologies of Iterative Development are Git, GitHub central project repository controlled by the project gatekeeper, and a content delivery network, like Cloudflare, deploying private Preview Internet websites, production websites, and individual team members private Preview websites. GitHub is a Distributed Version Control Systems enabling multiple teams to work separately on the same project without having an impact on the work of others. GitHub manages an online web hosted central project repository containing all project files. It is a unified source of truth. It helps teams collaborate and maintain the entire history of project file changes. The \"Central Repository\" is managed my a team member It helps answer the questions for the lifetime of the project who changed what, where, when, and why? Website\" for stake holders. The same \"MkDocs Static Site Generator\" tools are used to create the \"Production Website\" by the \"CDN - Deploy Website to Web\" GitHub Central Repository. The core technologies of Iterative Development are Git, GitHub central project repository controlled by the project gatekeeper, and a content delivery network, like Cloudflare, deploying private Preview Internet websites, production websites, and individual team members private Preview websites. GitHub is a Distributed Version Control Systems enabling multiple teams to work separately on the same project without having an impact on the work of others. GitHub manages an online web hosted central project repository containing all project files. It is a unified source of truth. It helps teams collaborate and maintain the entire history of project file changes. The \"Central Repository\" is managed my a team member It helps answer the questions for the lifetime of the project who changed what, where, when, and why? Team members use the Website Development Stack to develop and deploy websites to the Internet. There would be confusion and possible defects created if Team members were to directly make changes to the central project repository. A solution to this problem is to have one central repository controlled by a team member gatekeeper. Each team member forks a copy of central project repository to their GetHub account and makes a clone of it on their workstation. Each developer makes changes to their repository clone . They cannot directly make changes to the central repository. Team members commit changes to their local repository clone They may deploy their local repository to a private Preview Internet website for stakeholders to see and give feedback. The process is managed using GitHub for Teams . When stakeholders determine developers changes, defect fixes, or new features are ready, a GitHub Pull Request is made by developers to the central project repository. Project team members and the gatekeeper are notified by GitHub of the Pull Request request. They may examine, comment on, suggest possible changes, and test the code. When the team agrees on committed developers changes, they are committed to the central project repository by the gatekeeper. This process is repeated for all developer committed changes. Iterations of the central project repository may be deployed by the gatekeeper to a private Preview for stakeholders viewing. The next step is each developer Pulls the central repository changes and commits them to their local repository copy of the central project. This process keeps team members up to date on changes. The central project repository may be deployed to the public Internet by the gatekeeper after stakeholders agree there have been sufficient development and testing iterations.","title":"Website Development Stack"},{"location":"workstations/","text":":::info Workstations are the key hardware for website developers ::: Overview Web site development is not easy, time consuming, and expensive. Optimizing the website development environment is critical. The key hardware for website developers are terminals. They need to be: - Fast - Reliable - Supportable - Secure - Support Large or Multiple Screens - Run Software Development Applications The contemporary choice for web development workstations are Apple, Linux, and Microsoft. I have experience building web sites with purchased and bare metal built Linux systems and bare metal built Microsoft systems. I use apple products for exploring Internet technologies and creating web sites. Traditionally these companies built workstation products with Intel processors. They are diversifying their product line with ARM-based and RISC-architecture processors Apple Apple is a computer manufacturing company delivering workstation products with Apple developed macOS certified UNIX operating systems. Apple recently released the first Mac products built with the ARM-based, Apple silicon designed, processors, and the macOS Big Sur operating system engineered to use M1 chip capabilities. The last Apple processor transition was the Motorola 68000 to the Intel x86. It took time for Apple vendors and users to update their hardware and software to run on the x86. Apple created the Rosetta translation application that ran Motorola 68000 binary code on x86 machines. The M1 translation layer Rosetta 2, is about 80% the speed of the of native Apple Silicon code. The single-core Rosetta 2 benchmark running on a low end M1 MacBook Air with 8GB of RAM, is faster than other x86 Mac machines in single core benchmark. The M1 MacBook Air running native is faster than any competitors top of the line x86 machine, except for a couple. Apple products prices may be higher than their competitors. It is mitigated by the quality of hardware and software, robustness, security, and vendor support. Any unnecessary web developer workstation downtime is expensive. The advantages of Apple products are robustness, reliability, security, speed, vendor hardware and software support, and relative ease to use. Apple has responsibility for maintaining hardware and software products from sale to retirement. Apple Stores and other services are equipped to diagnose and repair Apple products. Operating systems updates have been free for years, and Apple continues to have the highest customer satisfaction in the industry. Linux Linux is an examples of free and open-source software collaboration. The source code may be used, modified and distributed commercially or non-commercially by anyone under the terms of its respective licenses Linux is the leading operating system on web servers. Its greatest success in the consumer market is mobile device. Android being one of the dominant smartphones Linux-based operating system There are a some Linux vendor supported hardware platforms or Linux software distributions. The diversity of Linux distributions means that not all software or hardware runs all distributions or applications. Software and software repositories may be specific to a particular distribution Not all peripheral device vendors suport Linux. The Linux open-source community supplies several missing device drivers. The price of Linux-based systems is attractive. The operating system software is free. Ready-made hardware platforms are available, or can be bare metal built by choosing hardware and software components, and having the skills to assemble and maintain them. The robustness, reliability, security, and speed of Linux systems varies from low to high, depending on the knowledge and skills of the vendors, builders and maintainers Responsibility for maintaining Linux workstation hardware, operating systems, and device drivers is fragmented or doesn't exist, except from the vendors, builders and maintainers There are computer repair services that are equipped to diagnosed and repaired Linux systems, but not to the extent of Apple Stores Microsoft Microsoft Many companies sell hardware platforms with Microsoft Windows installed. Many peripheral device vendors support Windows drivers. Consumer versions of Windows were originally designed for ease-of-use on a single-user PC without a network connection, and did not have security features built in from the outset. Windows updates are regularly improving security. Windows is one of hackers prime data hunting grounds, even with frequent security updates. Windows systems are everywhere and stores or has access to vast amounts of data. There are Windows installations that do not keep Windows updated. One reason may be issues with updates. Microsoft Windows update problem 2021 are recent examples. The reliability, robustness, security, and supportability of Microsoft systems varies from low to high, depending on the knowledge and skills of vendors, builders and maintainers. The combinations and permutations of vendor hardware platforms, software applications, and peripheral vendors and device support, may be contributing to Microsoft Windows update problems. There are computer repair services that are equipped to diagnosed and repaired Windows systems, but not to the extent of Apple Stores.","title":"Workstations"},{"location":"workstations/#overview","text":"Web site development is not easy, time consuming, and expensive. Optimizing the website development environment is critical. The key hardware for website developers are terminals. They need to be: - Fast - Reliable - Supportable - Secure - Support Large or Multiple Screens - Run Software Development Applications The contemporary choice for web development workstations are Apple, Linux, and Microsoft. I have experience building web sites with purchased and bare metal built Linux systems and bare metal built Microsoft systems. I use apple products for exploring Internet technologies and creating web sites. Traditionally these companies built workstation products with Intel processors. They are diversifying their product line with ARM-based and RISC-architecture processors","title":"Overview"},{"location":"workstations/#apple","text":"Apple is a computer manufacturing company delivering workstation products with Apple developed macOS certified UNIX operating systems. Apple recently released the first Mac products built with the ARM-based, Apple silicon designed, processors, and the macOS Big Sur operating system engineered to use M1 chip capabilities. The last Apple processor transition was the Motorola 68000 to the Intel x86. It took time for Apple vendors and users to update their hardware and software to run on the x86. Apple created the Rosetta translation application that ran Motorola 68000 binary code on x86 machines. The M1 translation layer Rosetta 2, is about 80% the speed of the of native Apple Silicon code. The single-core Rosetta 2 benchmark running on a low end M1 MacBook Air with 8GB of RAM, is faster than other x86 Mac machines in single core benchmark. The M1 MacBook Air running native is faster than any competitors top of the line x86 machine, except for a couple. Apple products prices may be higher than their competitors. It is mitigated by the quality of hardware and software, robustness, security, and vendor support. Any unnecessary web developer workstation downtime is expensive. The advantages of Apple products are robustness, reliability, security, speed, vendor hardware and software support, and relative ease to use. Apple has responsibility for maintaining hardware and software products from sale to retirement. Apple Stores and other services are equipped to diagnose and repair Apple products. Operating systems updates have been free for years, and Apple continues to have the highest customer satisfaction in the industry.","title":"Apple"},{"location":"workstations/#linux","text":"Linux is an examples of free and open-source software collaboration. The source code may be used, modified and distributed commercially or non-commercially by anyone under the terms of its respective licenses Linux is the leading operating system on web servers. Its greatest success in the consumer market is mobile device. Android being one of the dominant smartphones Linux-based operating system There are a some Linux vendor supported hardware platforms or Linux software distributions. The diversity of Linux distributions means that not all software or hardware runs all distributions or applications. Software and software repositories may be specific to a particular distribution Not all peripheral device vendors suport Linux. The Linux open-source community supplies several missing device drivers. The price of Linux-based systems is attractive. The operating system software is free. Ready-made hardware platforms are available, or can be bare metal built by choosing hardware and software components, and having the skills to assemble and maintain them. The robustness, reliability, security, and speed of Linux systems varies from low to high, depending on the knowledge and skills of the vendors, builders and maintainers Responsibility for maintaining Linux workstation hardware, operating systems, and device drivers is fragmented or doesn't exist, except from the vendors, builders and maintainers There are computer repair services that are equipped to diagnosed and repaired Linux systems, but not to the extent of Apple Stores","title":"Linux"},{"location":"workstations/#microsoft","text":"Microsoft Many companies sell hardware platforms with Microsoft Windows installed. Many peripheral device vendors support Windows drivers. Consumer versions of Windows were originally designed for ease-of-use on a single-user PC without a network connection, and did not have security features built in from the outset. Windows updates are regularly improving security. Windows is one of hackers prime data hunting grounds, even with frequent security updates. Windows systems are everywhere and stores or has access to vast amounts of data. There are Windows installations that do not keep Windows updated. One reason may be issues with updates. Microsoft Windows update problem 2021 are recent examples. The reliability, robustness, security, and supportability of Microsoft systems varies from low to high, depending on the knowledge and skills of vendors, builders and maintainers. The combinations and permutations of vendor hardware platforms, software applications, and peripheral vendors and device support, may be contributing to Microsoft Windows update problems. There are computer repair services that are equipped to diagnosed and repaired Windows systems, but not to the extent of Apple Stores.","title":"Microsoft"}]}